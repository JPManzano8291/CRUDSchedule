/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package subjsched;

import java.awt.HeadlessException;
import static java.lang.String.valueOf;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joshu
 */
public class Enroll extends javax.swing.JFrame {

    Connection con = javaConnection.connectdb();
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public Enroll(Object[] selectedRowData) {
        initComponents();
        
        tfSY.setText(String.valueOf(selectedRowData[1]));
        tfSem.setText(String.valueOf(selectedRowData[2]));
        tfSubC.setText(String.valueOf(selectedRowData[5]));
        tfBlkNum.setText(String.valueOf(selectedRowData[4]));
        tfFaqID.setText(String.valueOf(selectedRowData[11]));
    }

    private Enroll() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {
        // Close the current frame (Enroll)
        this.dispose();
    }
    
    private void updateTable(String selectedSubjectCode, String selectedBlockNum) {
    try {
        // Use a WHERE clause to filter by subject_code and block_no
        String query = "SELECT * FROM TBLENROLL WHERE subject_code = ? AND block_no = ?";
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, selectedSubjectCode);
        pst.setString(2, selectedBlockNum);
        ResultSet rs = pst.executeQuery();

        // Creating DefaultTableModel for the table
        DefaultTableModel model = new DefaultTableModel();
        tblEnroll.setModel(model);

        // Adding columns to the model
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
            model.addColumn(metaData.getColumnName(columnIndex));
        }

        // Adding rows to the model
        while (rs.next()) {
            Object[] row = new Object[columnCount];
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                row[columnIndex - 1] = rs.getObject(columnIndex);
            }
            model.addRow(row);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, e);
    }
}

private void clearComboBoxes() {
    cbStudNum.setSelectedIndex(-1);
    tfLastN.setText("");
    tfFirstN.setText("");
    cbStatus.setSelectedIndex(-1);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panSched = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbStudNum = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();
        btnGrades = new javax.swing.JButton();
        tfLastN = new javax.swing.JTextField();
        tfFirstN = new javax.swing.JTextField();
        tfSem = new javax.swing.JTextField();
        tfBlkNum = new javax.swing.JTextField();
        tfFaqID = new javax.swing.JTextField();
        tfSY = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfSubC = new javax.swing.JTextField();
        btnEnroll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnroll = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        Schedule = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panSched.setBackground(new java.awt.Color(0, 153, 0));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enrollment System");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("STUDENT NUMBER:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("LAST NAME:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("FIRST NAME:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("SCHOOL YEAR:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SEMESTER:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("BLOCK NO:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FACULTY ID:");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("STATUS:");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/subjsched/logo.png"))); // NOI18N

        cbStudNum.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        cbStudNum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "001", "002", "003", "004", "005", "006", "007", "008", "009", "010" }));

        cbStatus.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Enrolled", "Unenrolled" }));

        btnGrades.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnGrades.setText("GRADE");
        btnGrades.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradesActionPerformed(evt);
            }
        });

        tfLastN.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        tfFirstN.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        tfSem.setEditable(false);
        tfSem.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        tfBlkNum.setEditable(false);
        tfBlkNum.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        tfFaqID.setEditable(false);
        tfFaqID.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        tfSY.setEditable(false);
        tfSY.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("SUBJECT CODE:");

        tfSubC.setEditable(false);
        tfSubC.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N

        btnEnroll.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEnroll.setText("SCHEDULE");
        btnEnroll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panSchedLayout = new javax.swing.GroupLayout(panSched);
        panSched.setLayout(panSchedLayout);
        panSchedLayout.setHorizontalGroup(
            panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSchedLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfSubC, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbStudNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLastN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfFirstN, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfSem, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfBlkNum, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfSY, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfFaqID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(126, 126, 126))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(142, 142, 142))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSchedLayout.createSequentialGroup()
                        .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnGrades, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        panSchedLayout.setVerticalGroup(
            panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSchedLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrades, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStudNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfLastN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfFirstN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfSY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfSem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfSubC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBlkNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFaqID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(panSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        tblEnroll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ENROLL ID", "STUDENT NUMBER", "LAST NAME", "FIRST NAME", "SCHOOL YEAR", "SEMESTER", "SUBJECT CODE", "BLOCK NO.", "FACULTY ID", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEnroll);

        jPanel1.setBackground(new java.awt.Color(0, 153, 0));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAdd.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        Schedule.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        Schedule.setForeground(new java.awt.Color(255, 255, 255));
        Schedule.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Schedule.setText("Enroll");

        btnView.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnView.setText("View  ");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Schedule, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(Schedule, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnView)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panSched, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panSched, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
    String studentNumber = Objects.requireNonNull(cbStudNum.getSelectedItem()).toString();
    String subjectCode = tfSubC.getText();

    // Check if the student number already exists for the same subject code in TBLENROLL
    String checkEnrollQuery = "SELECT 1 FROM TBLENROLL WHERE student_no = ? AND subject_code = ?";
    try (PreparedStatement pstCheckEnroll = con.prepareStatement(checkEnrollQuery)) {
        pstCheckEnroll.setString(1, studentNumber);
        pstCheckEnroll.setString(2, subjectCode);
        ResultSet rsEnroll = pstCheckEnroll.executeQuery();

        // If rsEnroll has any rows, it means the student is already enrolled in the same subject code
        if (rsEnroll.next()) {
            JOptionPane.showMessageDialog(this, "Student is already enrolled in the selected subject code.");
            return; // Return to stop further processing.
        }
    }

    // Continue with the rest of your code for inserting into TBLENROLL and TBLGRADES

    // Insert into TBLENROLL
    String insertEnrollQuery = "INSERT INTO TBLENROLL (student_no, last_name, first_name, sy, semester, subject_code, block_no, faculty_ID, status) values (?,?,?,?,?,?,?,?,?)";
    try (PreparedStatement pstEnroll = con.prepareStatement(insertEnrollQuery)) {
        pstEnroll.setString(1, studentNumber);
        pstEnroll.setString(2, tfLastN.getText());
        pstEnroll.setString(3, tfFirstN.getText());
        pstEnroll.setString(4, tfSY.getText());
        pstEnroll.setString(5, tfSem.getText());
        pstEnroll.setString(6, subjectCode);
        pstEnroll.setString(7, tfBlkNum.getText());
        pstEnroll.setString(8, tfFaqID.getText());
        pstEnroll.setString(9, Objects.requireNonNull(cbStatus.getSelectedItem()).toString());

        pstEnroll.executeUpdate();
    }

    // Insert into TBLGRADES
    String insertGradesQuery = "INSERT INTO TBLGRADES (sy, semester, student_no, last_name, first_name, subject_code, block_no, status) values (?,?,?,?,?,?,?,?)";
    try (PreparedStatement pstGrades = con.prepareStatement(insertGradesQuery)) {
        pstGrades.setString(1, tfSY.getText());
        pstGrades.setString(2, tfSem.getText());
        pstGrades.setString(3, studentNumber);
        pstGrades.setString(4, tfLastN.getText());
        pstGrades.setString(5, tfFirstN.getText());
        pstGrades.setString(6, subjectCode);
        pstGrades.setString(7, tfBlkNum.getText());
        pstGrades.setString(8, Objects.requireNonNull(cbStatus.getSelectedItem()).toString());

        pstGrades.executeUpdate();
    }

    // Clear the selected items in JComboBoxes
    clearComboBoxes();
    String selectedBlockNo = tfBlkNum.getText();
    updateTable(subjectCode, selectedBlockNo);

} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e);
}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try {
            int selectedRow = tblEnroll.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row to edit.");
                return;
            }

            String studNum = tblEnroll.getValueAt(selectedRow, 1).toString();
            String lastN = tblEnroll.getValueAt(selectedRow, 2).toString();
            String firstN = tblEnroll.getValueAt(selectedRow, 3).toString();
            String sy = tblEnroll.getValueAt(selectedRow, 4).toString();
            String semester = tblEnroll.getValueAt(selectedRow, 5).toString();
            String subC = tblEnroll.getValueAt(selectedRow, 6).toString();
            String blkNum = tblEnroll.getValueAt(selectedRow, 7).toString();
            String faqID = tblEnroll.getValueAt(selectedRow, 8).toString();
            String status = tblEnroll.getValueAt(selectedRow, 9).toString();

            // Set the values to the corresponding fields
            cbStudNum.setSelectedItem(studNum);
            tfLastN.setText(lastN);
            tfFirstN.setText(firstN);
            tfSY.setText(sy);
            tfSem.setText(semester);
            tfSem.setText(subC);
            tfSubC.setText(subC);
            tfBlkNum.setText(blkNum);
            tfFaqID.setText(faqID);
            cbStatus.setSelectedItem(status);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
    int selectedRow = tblEnroll.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        return;
    }

    int confirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_CANCEL_OPTION);

    if (confirmDialog == JOptionPane.YES_OPTION) {
        String idToDeleteStr = tblEnroll.getValueAt(selectedRow, 0).toString();

        int idToDelete = Integer.parseInt(idToDeleteStr);

        // Delete from tblenroll only
        String deleteEnrollQuery = "DELETE FROM tblenroll WHERE Enroll_ID = ?";
        try (PreparedStatement pstDeleteEnroll = con.prepareStatement(deleteEnrollQuery)) {
            pstDeleteEnroll.setInt(1, idToDelete);
            int rowsAffectedEnroll = pstDeleteEnroll.executeUpdate();

            if (rowsAffectedEnroll > 0) {
                // Remove the deleted row from the table model
                DefaultTableModel model = (DefaultTableModel) tblEnroll.getModel();
                model.removeRow(selectedRow);

                // Notify the table that the data has changed
                model.fireTableDataChanged();
                JOptionPane.showMessageDialog(this, "Record deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Error deleting record.");
            }
        }
    }
} catch (SQLException | HeadlessException e) {
    // Log the exception or handle it appropriately
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearComboBoxes();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        String selectedSubjectCode = tfSubC.getText();
        String selectedBlockNo = tfBlkNum.getText();
        updateTable(selectedSubjectCode, selectedBlockNo);        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            int selectedRow = tblEnroll.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row to save changes.");
                return;
            }

            // Assuming you have a primary key column named "ID" in your database
            String idToUpdate = tblEnroll.getValueAt(selectedRow, 0).toString();

            String updateQuery = "UPDATE tblenroll SET student_no=?, last_name=?, first_name=?, sy=?, Semester=?, Subject_Code=?, Block_No=?, Faculty_ID=?, status =? WHERE enroll_ID=?";

            try (PreparedStatement pstUpdate = con.prepareStatement(updateQuery)) {

                // Set parameters for the update
                pstUpdate.setString(1, Objects.requireNonNull(cbStudNum.getSelectedItem()).toString());
                pstUpdate.setString(2, tfLastN.getText());
                pstUpdate.setString(3, tfFirstN.getText());
                pstUpdate.setString(4, tfSY.getText());
                pstUpdate.setString(5, tfSem.getText());
                pstUpdate.setString(6, tfSubC.getText());
                pstUpdate.setString(7, tfBlkNum.getText());
                pstUpdate.setString(8, tfFaqID.getText());
                pstUpdate.setString(9, Objects.requireNonNull(cbStatus.getSelectedItem()).toString());
                pstUpdate.setString(10, idToUpdate);

                int rowsAffected = pstUpdate.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Changes saved successfully.");
                    // Optionally, update the JTable after saving changes
                    // updateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Error saving changes.");
                }

                String selectedSubjectCode = tfSubC.getText();
                String selectedBlockNo = tfBlkNum.getText();
                updateTable(selectedSubjectCode, selectedBlockNo);
                clearComboBoxes();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollActionPerformed
        SubjSched sched = new SubjSched();
        sched.show();
        dispose();
    }//GEN-LAST:event_btnEnrollActionPerformed

    private void btnGradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradesActionPerformed
        // Get the selected row index
    int selectedRow = tblEnroll.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        try {
            // Retrieve the selected row data from the database
            Object[] selectedRowData = getSelectedRowData(selectedRow);

            // Check if the student is enrolled (assuming 'status' is the column indicating enrollment status)
            String enrollmentStatus = selectedRowData[9].toString(); // Adjust the column index as needed

            if ("Enrolled".equals(enrollmentStatus)) {
                // Create a new instance of the Grades JFrame
                Grades grade = new Grades();

                // Set the data in the Grades JFrame text fields
                grade.setGradesData();
                // Show the Grades JFrame
                grade.setVisible(true);
                // Close the current JFrame
                dispose();
            } else {
                // Display a message indicating that the student is not enrolled
                JOptionPane.showMessageDialog(this, "The selected student is not currently enrolled.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            // Handle any exceptions that might occur during data retrieval
        }
    } else {
        // Display a message indicating that no row is selected
        JOptionPane.showMessageDialog(this, "Please select a row to view grades.");
    }
    }//GEN-LAST:event_btnGradesActionPerformed
    
    private Object[] getSelectedRowData(int selectedRow) throws SQLException {
    // Assuming your table has a model and each column is of type String
    DefaultTableModel model = (DefaultTableModel) tblEnroll.getModel();

    // Retrieve the values from the selected row
    Object[] rowData = new Object[model.getColumnCount()];
    for (int i = 0; i < model.getColumnCount(); i++) {
        rowData[i] = model.getValueAt(selectedRow, i);
    }

    return rowData;
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Enroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Schedule;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEnroll;
    private javax.swing.JButton btnGrades;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<String> cbStudNum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panSched;
    private javax.swing.JTable tblEnroll;
    private javax.swing.JTextField tfBlkNum;
    private javax.swing.JTextField tfFaqID;
    private javax.swing.JTextField tfFirstN;
    private javax.swing.JTextField tfLastN;
    private javax.swing.JTextField tfSY;
    private javax.swing.JTextField tfSem;
    private javax.swing.JTextField tfSubC;
    // End of variables declaration//GEN-END:variables

   

}
